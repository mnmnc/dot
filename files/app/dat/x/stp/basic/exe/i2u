#!/usr/bin/env sh
# ii-utils

test $# -eq 0 && printf 'No arguments passed!' && exit 1
act="${1}" && shift
while test $# -gt 0; do
  case "$1" in
    -s|--server) II_SERVER="${2}"; shift 2;;
    -c|--channel) II_CHANNEL="${2}"; shift 2;;
    -n|--nick) II_NICK="${2}"; shift 2;;
    -p|--port) II_PORT="${2}"; shift 2;;
    -pw|--password) II_PASS="${2}"; shift 2;;
    *) printf 'Invalid param: %s' "${1}"; exit 1;;
  esac
done
II_SERVER="${II_SERVER:-irc.freenode.net}"
II_PORT="${II_PORT:-6667}"
II_DIR="${II_DIR:-$HOME/app/dat/irc}"
II_PID="${II_DIR}/${II_SERVER}/pid"
case "${act}" in
  c|con|connect)
    if test -f "${II_PID}"; then
      pid=$(cat "${II_PID}")
      kill -0 "${pid}" 2>&1 >/dev/null && kill "${pid}"; printf '[%s] Killed old ii as "%s"...\n' "$(date +'%X')" "${pid}"
      rm "${II_PID}"
    fi
    test -z "${II_SERVER}" && printf 'Missing server!' && exit 1
    test -z "${II_NICK}" && printf 'Missing nick!' && exit 1
    printf '[%s] Connecting to %s (port %s) as "%s"...\n' "$(date +'%X')" "${II_SERVER}" "${II_PORT}" "${II_NICK}"
    ii -s "${II_SERVER}" -p "${II_PORT}" -n "${II_NICK}" -i "${II_DIR}" &
    pid="$!"
    printf '%s' "${pid}" > "${II_PID}"
    test -z "${II_PASS}" && read -p 'Password: ' II_PASS && test -z "${II_PASS}" && printf 'Missing password!' && exit 1
    printf '[%s] Identifying as "%s"...\n' "$(date +'%X')" "${II_NICK}"
    #test -f "${II_DIR}/${II_SERVER}/nickserv/out" && rm "${II_DIR}/${II_SERVER}/nickserv/out"
    printf "identify %s\n" "${II_PASS}" > "${II_DIR}/${II_SERVER}/nickserv/in"
    tail -n 0 -f "${II_DIR}/${II_SERVER}/nickserv/out" | while read ll; do
      if printf '%s' "${ll}" | grep -q 'You are now identified'; then
        pkill -P $$ tail
      elif printf '%s' "${ll}" | grep -q 'Invalid password'; then
        printf '[%s] Invalid password for "%s"!\n' "$(date +'%X')" "${II_NICK}"
        kill "${pid}" $$
        exit
      fi
      #elif $(printf '%s' "${ll}" | grep -q 'You are now identified'); then
      #if [[ "${ll}" == *"You are now identified"* ]]; then
        #echo -e "\n"
        #pkill -P $$ tail
        #break
      #fi
    done
    printf '[%s] Indentified\n' "$(date +'%X')"
    if ! test -z "${II_CHANNEL}"; then
      printf '[%s] Joining channels\n' "$(date +'%X')"
      for chn in ${II_CHANNEL}; do
        printf '/join #%s\n' > "${II_DIR}/${II_SERVER}/in"
      done
    fi
    printf '[%s] Finished\n' "$(date +'%X')"
  ;;
  j|join)
    test -z "${II_SERVER}" && printf 'Missing server!' && exit 1
    test -z "${II_CHANNEL}" && printf 'Missing channel!' && exit 1
    printf '[%s] Joining channels\n' "$(date +'%X')"
    for chn in ${II_CHANNEL}; do
      printf '/join #%s\n' "${chn}" > "${II_DIR}/${II_SERVER}/in"
    done
    printf '[%s] Finished\n' "$(date +'%X')"
  ;;
  q|quit)
    if test -f "${II_PID}"; then
      pid=$(cat "${II_PID}")
      if kill -0 "${pid}"; then
        printf '[%s] Disconnecting\n' "$(date +'%X')"
        printf '/quit\n' > "${II_DIR}/${II_SERVER}/in"
        sleep 1.
        printf '[%s] Kill active ii as "%s"...\n' "$(date +'%X')" "${pid}"
        kill "${pid}"
        printf '[%s] Finished\n' "$(date +'%X')"
      fi
      rm "${II_PID}"
    fi
  ;;
esac