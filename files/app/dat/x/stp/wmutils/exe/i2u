#!/usr/bin/env sh
# ii-utils

test $# -eq 0 && printf 'No arguments passed!' && exit 1
act="${1}" && shift

. i2p

alive=0
pid=0
if test -f "${II_PID}"; then
  pid=$(cat "${II_PID}")
  kill -0 "${pid}" > /dev/null 2>&1 && alive=1
  #kill "${pid}"
  #printf '[%s] Killed old ii as "%s"...\n' "$(date +'%X')" "${pid}"
  #rm "${II_PID}"
fi

case "${act}" in
  c|con|connect)
    test -z "${II_SERVER}" && printf 'Missing server!' && exit 1
    test -z "${II_NICK}" && printf 'Missing nick!' && exit 1
    
    while :; do
      if test "${alive}" -eq 0; then
        printf '[%s] Connecting to %s (port %s) as "%s"...\n' "$(date +'%X')" "${II_SERVER}" "${II_PORT}" "${II_NICK}"
        ii -s "${II_SERVER}" -p "${II_PORT}" -n "${II_NICK}" -i "${II_DIR}" &
      
        pid="$!"
        printf '%s' "${pid}" > "${II_PID}"
      
        test -z "${II_PASS}" && read -p 'Password: ' II_PASS && test -z "${II_PASS}" && printf 'Missing password!' && exit 1
        printf '[%s] Identifying as "%s"...\n' "$(date +'%X')" "${II_NICK}"
        printf "identify %s\n" "${II_PASS}" > "${II_DIR}/${II_SERVER}/nickserv/in"
      
        tail -n 0 -f "${II_DIR}/${II_SERVER}/nickserv/out" | while read ll; do
          if printf '%s' "${ll}" | grep -q 'You are now identified'; then
            pkill -P $$ tail
          elif printf '%s' "${ll}" | grep -q 'Invalid password'; then
            printf '[%s] Invalid password for "%s"!\n' "$(date +'%X')" "${II_NICK}"
            kill "${pid}" $$
            exit
          fi
        done
        printf '[%s] Indentified\n' "$(date +'%X')"
        
        if ! test -z "${II_CHANNEL}"; then
          printf '[%s] Joining channels\n' "$(date +'%X')"
          for chn in ${II_CHANNEL}; do
            printf '/join #%s\n' "${chn}" > "${II_DIR}/${II_SERVER}/in"
          done
        fi
      
        printf '[%s] Finished\n' "$(date +'%X')"
      fi
      
      test "${II_RECONNECT}" -eq 0 && exit

      wait "${pid}"
      alive=0
      sleep 1
    done
  ;;
  j|join)
    test -z "${II_SERVER}" && printf 'Missing server!' && exit 1
    test -z "${II_CHANNEL}" && printf 'Missing channel!' && exit 1
    test "${alive}" -eq 0 && printf 'II not running!' && exit 1

    printf '[%s] Joining channels\n' "$(date +'%X')"
    for chn in ${II_CHANNEL}; do
      printf '/join #%s\n' "${chn}" > "${II_DIR}/${II_SERVER}/in"
    done
    
    printf '[%s] Finished\n' "$(date +'%X')"
  ;;
  l|leave)
    test -z "${II_SERVER}" && printf 'Missing server!' && exit 1
    test -z "${II_CHANNEL}" && printf 'Missing channel!' && exit 1
    test "${alive}" -eq 0 && printf 'II not running!' && exit 1
    
    printf '[%s] Leaving channels\n' "$(date +'%X')"
    for chn in ${II_CHANNEL}; do
      printf '/part #%s\n' "${chn}" > "${II_DIR}/${II_SERVER}/in"
    done
    
    printf '[%s] Finished\n' "$(date +'%X')"
  ;;
  q|quit)
    test "${alive}" -eq 0 && printf 'II not running!' && exit 0
    
    if test -f "${II_PID}"; then
      pid=$(cat "${II_PID}")
      if kill -0 "${pid}"; then
        printf '[%s] Disconnecting\n' "$(date +'%X')"
        printf '/quit\n' > "${II_DIR}/${II_SERVER}/in"
        sleep 1.
        printf '[%s] Kill active ii as "%s"...\n' "$(date +'%X')" "${pid}"
        kill "${pid}"
        printf '[%s] Finished\n' "$(date +'%X')"
      fi
      rm "${II_PID}"
    fi
  ;;
esac
