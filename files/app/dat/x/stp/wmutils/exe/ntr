#!/bin/sh

test -d "${NOTIFY_DIR}" || mkdir "${NOTIFY_DIR}"
test -e "${NOTIFY_FIFO}" && rm -f "${NOTIFY_FIFO}"
test -f "${NOTIFY_CACHE}" || touch "${NOTIFY_CACHE}"
mkfifo "${NOTIFY_FIFO}" && trap "rm -f ${NOTIFY_FIFO} ${NOTIFY_CACHE}" EXIT

addToCache() {
  grep -q "${1}" "${NOTIFY_CACHE}" && return 1
  printf '%s\n' "${1}" >> "${NOTIFY_CACHE}"
}

delFromCache() {
  ! grep -q "${1}" "${NOTIFY_CACHE}" && return 1
  sed -i "\~${1}~d" "${NOTIFY_CACHE}"
}

eval "$(x2v)"

while :; do
  while read -r line; do
    part=$(printf '%s' "${line}" | cut -c 1-2)
    val=$(printf '%s' "${line}" | cut -c 4-)

    test "${part}" = 'WM' && val=$(printf '%s' "${line}" | cut -c 3-)

    case "${part}" in
      'BT') # battery
        if test "${val}" -le 10; then
          btStr="%{F${base09}}%{F-} "
          if addToCache "${part}"; then
            #notify-send -u 'critical' " ${val}%"
            lastMsg=" ${val}%"
          fi
        else
          btStr=""
          if delFromCache "${part}"; then
            #notify-send -u 'normal' " ${val}%"
            lastMsg=" ${val}%"
          fi
        fi;;
      'CL') # clock
          clStr=" ${val} "
          lastMsg="${clStr}"
          ;;
      'CT') # cpu temperature
          if test "${val}" -ge 75; then
            ctStr="%{F${base09}}%{F-} "
            if addToCache "${part}"; then
              #notify-send -u 'critical' " ${val}°C",
              lastMsg=" ${val}°C"
            fi
          else
            ctStr=""
            if delFromCache "${part}"; then
              #notify-send -u 'normal' " ${val}°C"
              lastMsg=" ${val}°C"
            fi
          fi
          ;;
      'CU') # cpu usage
          if test "${val}" -ge 75; then
            cuStr="%{F${base09}}%{F-} "
            if addToCache "${part}"; then
              #notify-send -u 'critical' " ${val}%"
              lastMsg=" ${val}%"
            fi
          else
            cuStr=""
            if delFromCache "${part}"; then
              #notify-send -u 'normal' " ${val}%"
              lastMsg=" ${val}%"
            fi
          fi
          ;;
      #'DE') # desktop
          #notify-send -i "${val}" -u 'low' " %I"
          #;;
      'DP') # display
          notify-send -u low " ${val}"
          ;;
      'DT') # date
          dtStr=" ${val} "
          lastMsg="${dtStr}"
          ;;
      'FW') # firewall
          if test "${val}" -eq 0; then
            fwStr="%{F${base09}}%{F-} "
            if addToCache "${part}"; then
              #notify-send -u 'critical' " off"
              lastMsg=" off"
            fi
          else
            fwStr=""
            if delFromCache "${part}"; then
              #notify-send -u 'normal' " on"
              lastMsg=" on"
            fi
          fi
          ;;
      'GT') # graphic card temperature
          if test "${val}" -ge 75; then
            gtStr="%{F${base09}}%{F-} "
            if addToCache "${part}"; then
              #notify-send -u 'critical' " ${val}°C"
              lastMsg=" ${val}°C"
            fi
          else
            gtStr=""
            if delFromCache "${part}"; then
              #notify-send -u 'normal' " ${val}°C"
              lastMsg=" ${val}°C"
            fi
          fi
          ;;
      'IC') # Internet Connectivity
          if test "${val}" -eq 0; then
            icStr="%{F${base09}}%{F-} "
            lastMsg=" off"
          else
            icStr=""
            lastMsg=" on"
          fi
          ;;
      'KL') # keyboard layout
          klStr="${val}"
          notify-send -i "${val}" -u low " %I"
          lastMsg=" ${val}"
          ;;
      'LD') # workload
          if test "${val}" -ge 200; then
            ldStr="%{F${base09}}%{F-} "
            if addToCache "${part}"; then
              #notify-send -u 'critical' " ${val}%"
              lastMsg=" ${val}%"
            fi
          else
            ldStr=""
            if delFromCache "${part}"; then
              #notify-send -u 'normal' " ${val}%"
              lastMsg=" ${val}%"
            fi
          fi
          ;;
      'MB') # mouse battery
        if test "${val}" -le 10; then
          mbStr="%{F${base09}}%{F-} "
          if addToCache "${part}"; then
            #notify-send -u 'critical' " ${val}%"
            lastMsg=" ${val}%"
          fi
        else
          mbStr=""
          if delFromCache "${part}"; then
            #notify-send -u 'normal' " ${val}%"
            lastMsg=" ${val}%"
          fi
        fi;;
      'MC') # microhpone activitiy
          if test "${val}" -eq 1; then
            mcStr="%{F${base09}}%{F-} "
            if addToCache "${part}"; then
              #notify-send -u 'normal' " rec"
              lastMsg=" rec"
            fi
          else
            mcStr=""
            if delFromCache "${part}"; then
              #notify-send -u 'low' " off"
              lastMsg=" off"
            fi
          fi
          ;;
      'MS') # music playback
          notify-send -u 'low' " ${val}"
          lastMsg=" ${val}"
          ;;
      'MT') # mounts
          if test "${val}" -gt 0; then
            mtStr=" ${val} "
          else
            mtStr=""
          fi
          ;;
      'PK') # package updates
          if test "${val}" -ge 10; then
            pkStr="%{F${base09}}%{F-} "
            if addToCache "${part}"; then
              #notify-send -u 'critical' " ${val}"
              lastMsg=" ${val}"
            fi
          else
            pkStr=""
            if delFromCache "${part}"; then
              #notify-send -u 'normal' " ${val}"
              lastMsg=" ${val}"
            fi
          fi
          ;;
      'RM') # ram space
          if test "${val}" -ge 90; then
            rmStr="%{F${base09}}%{F-} "
            if addToCache "${part}"; then
              #notify-send -u 'critical' " ${val}%"
              lastMsg=" ${val}%"
            fi
          else
            rmStr=""
            if delFromCache "${part}"; then
              #notify-send -u 'normal' " ${val}%"
              lastMsg=" ${val}%"
            fi
          fi
          ;;
      'RX') # received data
          if test "${val}" -ge 5000; then
            rxStr="%{F${base09}}%{F-} "
            if addToCache "${part}"; then
              #notify-send -u 'normal' " ${val}kbs"
              lastMsg=" ${val}kbs"
            fi
          else
            rxStr=""
            if delFromCache "${part}"; then
              #notify-send -u 'low' " ${val}kbs"
              lastMsg=" ${val}kbs"
            fi
          fi
          ;;
      'SI') # SSH connections in
          if test "${val}" -ne 0; then
            siStr="%{F${base09}}%{F-} "
            if addToCache "${part}"; then
              #notify-send -u 'critical' " ${val}"
              lastMsg=" ${val}"
            fi
          else
            siStr=""
            if delFromCache "${part}"; then
              #notify-send -u 'normal' " ${val}"
              lastMsg=" ${val}"
            fi
          fi
          ;;
      'SO') # SSH connections out
          if test "${val}" -ne 0; then
            soStr="%{F${base09}}%{F-} "
            if addToCache "${part}"; then
              #notify-send -u 'normal' " ${val}"
              lastMsg=" ${val}"
            fi
          else
            soStr=""
            if delFromCache "${part}"; then
              #notify-send -u 'low' " ${val}"
              lastMsg=" ${val}"
            fi
          fi
          ;;
      'SP') # device space
          dev=$(printf '%s' "${val}" | awk -F '|' '{print $1}')
          spc=$(printf '%s' "${val}" | awk -F '|' '{print $2}')
          if test "${spc}" -ge 90; then
            spStr="%{F${base09}}%{F-} "
            if addToCache "${part}|${dev}"; then
              #notify-send -u 'critical' " ${dev} ${spc}%"
              lastMsg=" ${dev} ${spc}%"
            fi
          else
            if delFromCache "${part}|${dev}"; then
              #notify-send -u 'normal' " ${dev} ${spc}%"
              lastMsg=" ${dev} ${spc}%"
              ! grep -q "${part}|${dev}" "${PANEL_CACHE}" && spStr=""
            fi
          fi
          ;;
      'TX') # transmitted data
          if test "${val}" -ge 5000; then
            txStr="%{F${base09}}%{F-} "
            if addToCache "${part}"; then
              #notify-send -u 'normal' " ${val}kbs"
              lastMsg=" ${val}kbs"
            fi
          else
            txStr=""
            if delFromCache "${part}"; then
              #notify-send -u 'low' " ${val}kbs"
              lastMsg=" ${val}kbs"
            fi
          fi
          ;;
      'WC') # webcam activitiy
          if test "${val}" -eq 1; then
            wcStr="%{F${base09}}%{F-} "
            if addToCache "${part}"; then
              #notify-send -u 'normal' " rec"
              lastMsg=" rec"
            fi
          else
            wcStr=""
            if delFromCache "${part}"; then
              #notify-send -u 'low' " off"
              lastMsg=" off"
            fi
          fi
          ;;
      'WL') # wlan connectivity
          if test "${val}" -le 35; then
            wlStr="%{F${base09}}%{F-} "
            if addToCache "${part}"; then
              #notify-send -i "${val}%" -u 'normal' " %I"
              lastMsg=" ${val}%"
            fi
          else
            wlStr=""
            if delFromCache "${part}"; then
              #notify-send -i "${val}%" -u 'low' " %I"
              lastMsg=" ${val}%"
            fi
          fi
          ;;
      'WM') # windows manager
          wmStr=''
          num=0
          for col in $(echo "${val}" | tr ':' ' '); do
            num=$(printf "${num} +1\n" | bc)
            typ=$(printf '%s' "${col}" | cut -c 1)
            dsk=$(printf '%s' "${col}" | cut -c 2-)

            # f = free desktop
            # F = focused free desktop
            # o = occupied desktop
            # O = focused occupied desktop
            # u = urgent desktop
            # U = focused urgent desktop
            case "${typ}" in
              #f) wmStr="${wmStr}%{F${base02}}${dsk}%{F-} ";;
              o|u) wmStr="${wmStr}%{F${base03}}${dsk}%{F-} ";;
              F|O|U) wmStr="${wmStr}%{F${base05}}${dsk}%{F-} ";;
            esac

            #notify-send -i "${val}" -u 'low' " %I"
          done
          ;;
      'WT') # weather
          wtType=$(printf '%s' "${val}" | awk -F '|' '{print $1}')
          wtTemp=$(printf '%s' "${val}" | awk -F '|' '{print $2}')
          wtIcon=''
          case "${wtType}" in
            Clear) wtIcon="";;
            Fog|Mist) wtIcon="";;
            Clouds) wtIcon="";;
            Rain) wtIcon="";;
            Snow) wtIcon="";;
            Thunderstorm|Storm) wtIcon="";;
          esac
          wtStr="%{F${base09}}${wtIcon} ${wtTemp}°C%{F-} "
          #notify-send -u 'low' "${wtIcon} ${wtTemp}°C"
          lastMsg="${wtIcon} ${wtTemp}°C"
          ;;
      'VL') # volume
          status=$(amixer get Master | grep -o -w 'o[nf]*')
          if test "${status}" = 'off' || test "${val}" -eq 0; then
            vlStr="%{F${base09}}%{F-} "
            notify-send -t 500 -u 'low' -i "mute" " %I"
          else
            vlStr=""
            notify-send -t 500 -u 'low' -i "${val}%" " %I"
          fi
          lastMsg=" ${val}%"
          ;;
    esac

    #lftStr=" ${wmStr}"
    #cenStr=""
    #cenStr="%{F${base04}}${clStr}%{F-}"
    #cenStr=" %{F${base04}}${lastMsg}%{F-}"
    #rgtStr="${btStr}${ctStr}${cuStr}${fwStr}${gtStr}${ldStr}${mcStr}${pkStr}${rmStr}${spStr}${siStr}${soStr}${rxStr}${txStr}${wcStr} "

    system="${btStr}${rmStr}${spStr}${cuStr}${wlStr}${ctStr}${gtStr}${mtStr}"
    safety="${fwStr}${pkStr}${siStr}${soStr}"
    network="${rxStr}${txStr}${wlStr}${icStr}"
    media="${mbStr}${mcStr}${wcStr}${vlStr}"

    lftStr=""
    cenStr=""
    rgtStr="${media}${network}${system}${safety}"

    printf '%s\n' "%{l}${lftStr}%{c}${cenStr}%{r}${rgtStr}"
  done < "${NOTIFY_FIFO}"
done
