#!/bin/sh
# void-user-backup

scriptDir=$(dirname `realpath -P "$0"`)
parentDir=$(dirname "${scriptDir}")
test -z "${usrName}" && usrName=$(logname)
usrDir="/home/${usrName}"

vub_create () {
  test -d /data || exit 1
  
  if ! test -d "${usrDir}/msc"; then
    printf '[%s] Preparing cache ...\n' "$(date +'%X')"
    mkdir -p "${usrDir}/msc"
  fi

  if test -f "${usrDir}/msc/lock"; then
    printf '[%s] ERROR: Cannot lock. Another backup in progress?\n' "$(date +'%X')"
    exit 1
  fi

  if ! test -d "/data/bak/users"; then
    printf '[%s] Creating backup repo ...\n' "$(date +'%X')"
    borg init "/data/bak/users"
  fi

  printf '[%s] Starting backup ...\n' "$(date +'%X')"
  dateTime="$(date +'%Y%m%d-%H%M%S')"
  printf '%s' "${dateTime}" > "${usrDir}/msc/lock"

  printf '[%s] Compressing backup ...\n' "$(date +'%X')"
  tar cfz "${usrDir}/msc/user-data.tar.gz" "${usrDir}/msc/"

  if test -f "${usrDir}/msc/core-cfg.tar.gz"; then
    printf '[%s] Creating checksum ...\n' "$(date +'%X')"
    (cd "${usrDir}/msc" && md5sum core-cfg.tar.gz > "${usrDir}/msc/user-data.md5")
  fi

  printf '[%s] Cleaning cache ...\n' "$(date +'%X')"
  find "${usrDir}/msc" -type f ! -name 'user-data.*' -delete

  if grep -qs /host /proc/mounts; then
    printf '[%s] Copying backup to host ...\n' "$(date +'%X')"
    cp "${usrDir}/msc/"* /host
  fi

  printf '[%s] Creating user fs backup ...\n' "$(date +'%X')"
  borg create --exclude-from "${parentDir}/conf/vub.ignore" "/data/bak/users::${usrName}@${dateTime}" "${usrDir}/app" "${usrDir}/dot" "${usrDir}/msc" "${usrDir}/usr"

  printf '[%s] Cleaning up ...\n' "$(date +'%X')"
  rm -r "${usrDir}/msc"
}

vub_dryrun() {
  dateTime="$(date +'%Y%m%d-%H%M%S')"
  borg create -v --list --dry-run --exclude-from "${parentDir}/conf/vub.ignore" "/data/bak/users::${usrName}@${dateTime}" "${usrDir}/app" "${usrDir}/dot" "${usrDir}/msc" "${usrDir}/usr"
}

vub_info() {
  vub_list

  printf '[%s] Choose target backup ...\n' "$(date +'%X')"
  read -p ': ' answ

  borg info "/data/bak/users::${answ}"
}

vub_list () {
  printf '[%s] Listing available backups ...\n' "$(date +'%X')"
  borg list '/data/bak/users'
}

vub_mount () {
  vub_list

  printf '[%s] Choose mount backup ...\n' "$(date +'%X')"
  read -p ': ' answ
}

vub_restore () {
  vub_list

  printf '[%s] Choose restore backup ...\n' "$(date +'%X')"
  read -p ': ' answ

  borg extract "/data/bak/users::${answ}"
}

test -z "${1}" && exit 1
act="${1}"; shift

case "${act}" in
  c) vub_create ${@};;
  d) vub_dryrun ${@};;
  i) vub_info ${@};;
  l) vub_list ${@};;
  m) vub_mount ${@};;
  r) vub_restore ${@};;
esac